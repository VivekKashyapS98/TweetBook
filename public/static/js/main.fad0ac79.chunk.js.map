{"version":3,"sources":["store/reducers/currentUser.js","store/reducers/index.js","store/actionTypes.js","components/welcome.js","containers/NavBar.js","services/api.js","components/messageCard.js","containers/home.js","components/dialogBox.js","components/profileEdit.js","containers/user.js","containers/notifications.js","store/actions/actionCreators.js","components/form.js","containers/AuthForm.js","components/newTweet.js","containers/ShowCase.js","containers/App.js","store/index.js","serviceWorker.js","index.js"],"names":["DEFAULT_STATE","isAuthenticated","user","rootReducer","combineReducers","currentUser","state","action","type","Object","keys","payload","length","connect","auth","props","history","useHistory","push","Fragment","className","Button","component","color","onClick","id","BottomNavigation","value","BottomNavigationAction","Link","to","label","icon","default","Fab","apiCall","method","path","data","Promise","resolve","reject","axios","then","res","catch","err","response","error","userInfo","post","useState","likes","some","val","like","setLike","likeCount","likeAdd","text","Paper","_id","console","log","fontSize","style","margin","Chip","Date","updatedAt","toDateString","avatar","Avatar","alt","username","src","profileImgUrl","Home","feed","load","this","setState","feedPosts","CircularProgress","map","item","index","key","Component","DialogTitle","withStyles","theme","root","padding","spacing","closeButton","position","right","top","palette","grey","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","aria-label","DialogContent","MuiDialogContent","namesStyle","display","flexDirection","borderRadius","minWidth","CustomizedDialogs","open","setOpen","setData","follow","setFollow","handleClickOpen","handleClose","showData","followers","componenet","following","Dialog","aria-labelledby","FormDialog","editProfile","bio","setBio","profilePic","setProfilePic","DialogContentText","TextField","autoFocus","onChange","e","target","fullWidth","DialogActions","User","navbar","match","params","tweet","tweets","messages","maxWidth","handleFollow","withRouter","Notifications","setAuthorizationToken","token","defaults","headers","common","setTokenHeader","setCurrentUser","userData","dispatch","localStorage","setItem","jwtToken","Username","handleChange","input","FormControl","InputLabel","htmlFor","Input","required","aria-describedby","name","FormHelperText","Email","Password","ProfileImgUrl","AuthForm","errorDisc","email","password","preventDefault","message","form","onSubmit","handleSubmit","Alert","severity","NewTweet","currentUserId","handlePost","multiline","rows","exact","store","createStore","compose","applyMiddleware","thunk","jwtDecode","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fad0ac79.chunk.js","sourcesContent":["import { SET_CURRENT_USER } from '../actionTypes';\n\nconst DEFAULT_STATE = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !!Object.keys(action.payload.user).length,\n                user: action.payload.user\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport currentUser from './currentUser';\n\nconst rootReducer = combineReducers({\n    currentUser\n});\n\nexport default rootReducer;","export const ADD_ERROR = \"ADD_ERROR\";\nexport const REMOVE_ERROR = \"REMOVE_ERROR\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React from 'react';\nimport '../styling/main.css';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\n\nconst Welcome = (props) => {\n    const history = useHistory();\n    if(props.auth) {\n        history.push('/home');\n        return <p>loading...</p>;\n    } else {\n        return (\n            <React.Fragment>\n                <header className=\"header\">\n                    <h2 className=\"logo\">TweetBook</h2>\n                    <div className=\"nav\">\n                        <Button \n                          component=\"div\"\n                          color=\"inherit\"\n                          className=\"nav-button\"\n                          onClick={() => history.push('/signup')}>\n                              Signup\n                        </Button>\n                        <Button \n                          component=\"div\"\n                          color=\"inherit\"\n                          className=\"nav-button\"\n                          onClick={() => history.push('/signin')}>\n                              Login\n                        </Button>\n                    </div>\n                </header>\n                <div className=\"background-img\">\n                    <div className=\"welcome\">\n                        <h1 className=\"welcome-text\">Welcome to TweetBook!</h1>\n                        <p className=\"welcome-desc\"><b>Login/Signup</b> to explore more...</p>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.currentUser.isAuthenticated\n});\n\nexport default connect(mapStateToProps, null)(Welcome);\n","import React from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport '../styling/main.css';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nfunction NavBar(props) {\n  const history = useHistory();\n\n  return (\n    <div className='navbar'>\n        <BottomNavigation value={props.value} className=\"bottom-nav\">\n            <BottomNavigationAction \n                component={Link} \n                to=\"/home\" \n                label=\"Home\" \n                value=\"Home\" \n                icon={<HomeIcon />} \n                default\n            />\n            <BottomNavigationAction \n                component={Link} \n                to=\"/notifications\" \n                label=\"Notifications\" \n                value=\"Notifications\" \n                icon={<NotificationsIcon />} \n            />\n            <BottomNavigationAction \n                component={Link} \n                to={`/user/${props.user}`} \n                label=\"User\" \n                value=\"User\" \n                icon={<AccountCircleIcon />} \n            />\n        </BottomNavigation>\n        <Fab \n          component=\"button\" \n          className=\"add-icon\"\n          color=\"primary\" \n          onClick={() => history.push(\"/newTweet\")}\n        >\n          <AddIcon />\n        </Fab>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.currentUser.user.id\n});\n\nexport default connect(mapStateToProps, null)(NavBar);\n","import axios from 'axios';\n\nexport function setTokenHeader(token) {\n    if(token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport function apiCall(method, path, data) {\n    return new Promise((resolve, reject) => {\n        axios[method](path, data)\n            .then(res => resolve(res.data))\n            .catch(err => reject(err.response.data.error))\n    })\n}","import React, { useState } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { useHistory } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport { apiCall } from '../services/api';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport '../styling/main.css';\n\nexport default ({ userInfo, post}) => {\n  const history = useHistory();\n  const user = {...post.user};\n\n  const isLiked = () => {\n    if(post.likes.some(val => val === userInfo.id)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  const [like, setLike] = useState(isLiked() ? \"secondary\" : \"action\");\n  const [likeCount, likeAdd] = useState(post.likes.length);\n\n  const handleLike = () => {\n    if(like === \"secondary\") {\n      apiCall('delete', `/api/users/${userInfo.id}/message/${post._id}/like`)\n        .then(data => {\n          setLike(\"action\");\n          likeAdd(likeCount - 1);\n          console.log(data);\n        })\n        .catch(err => console.log(err))\n    } else {\n      apiCall('post', `/api/users/${userInfo.id}/message/${post._id}/like`)\n        .then(data => {\n          setLike(\"secondary\");\n          likeAdd(likeCount + 1);\n          console.log(data);\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  return (\n    <div className=\"message-card\">\n      <p className=\"post-text\">{post.text}</p>\n      <Paper component=\"div\" className=\"msgcard-info\">\n        <div className=\"msgcard-like\">\n          <FavoriteIcon onClick={() => handleLike()} fontSize=\"small\" color={like} />\n          <p style={{ margin: '0 10px' }}>{likeCount}</p>\n          <Chip label={new Date(post.updatedAt).toDateString()} />\n        </div>\n        <Chip \n          avatar={<Avatar alt={user.username} src={user.profileImgUrl} />}\n          onClick={() => history.push(`/user/${user._id}`)}\n          label={user.username}\n        />\n      </Paper>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from \"./NavBar\";\nimport MessageCard from '../components/messageCard';\nimport { apiCall } from '../services/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../styling/main.css';\n\nclass Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            feed: [],\n            load: false\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.state);\n        apiCall('get', '/api/messages')\n            .then(data => {\n                this.setState({feed: data, load: true});\n                console.log(\"Fetched Data: \", data);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        let feedPosts = <div className=\"loading\"><CircularProgress /></div>;\n        if(this.state.load === true) {\n            let stateFeed = [...this.state.feed];\n            feedPosts = stateFeed.map((item, index) => {\n                return <MessageCard \n                        key={index} \n                        userInfo={this.props.user} \n                        post={item} \n                       />\n            });\n        }\n        console.log(this.state.feed, this.state.load);\n        return (\n            <React.Fragment>\n                <div className=\"home-page\">\n                    {feedPosts}\n                </div>\n                <NavBar value={\"Home\"} />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.currentUser.user\n});\n\nexport default connect(mapStateToProps, null)(Home);","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../styling/main.css';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst namesStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  borderRadius: '20px',\n  margin: '5px',\n  padding: '5px',\n  minWidth: '80px'\n}\n\nexport default function CustomizedDialogs({ user }) {\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState(null);\n  const [follow, setFollow] = useState(null);\n\n  const handleClickOpen = (data, follow) => {\n    setOpen(true);\n    setData(data);\n    setFollow(follow);\n  };\n  const handleClose = () => {\n    setFollow('');\n    setData(null);\n    setOpen(false);\n  };\n\n  let showData = <CircularProgress />;\n  if(data !== null) {\n    showData = data.map((item, index) => {\n      return <div key={index} style={namesStyle}>\n        <Avatar alt=\"Remy Sharp\" src={item.profileImgUrl} />\n        <h4 style={{ margin: '5px' }}>{item.username}</h4>\n      </div>\n    })\n  }\n\n  return (\n    <div>\n        <div className=\"profile-row\">\n            <Chip \n            component=\"div\"\n            style={{padding: '10px', margin: '10px'}}\n            label={`followers ${user.followers.length}`}\n            onClick={() => handleClickOpen(user.followers, \"followers\")} \n            />\n            <Chip \n            componenet=\"div\"\n            style={{padding: '10px', margin: '10px'}}\n            label={`following ${user.following.length}`} \n            onClick={() => handleClickOpen(user.following, \"Following\")}\n            />\n        </div>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {follow}\n        </DialogTitle>\n        <DialogContent>\n          {showData}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport default function FormDialog({ editProfile }) {\n  const [open, setOpen] = useState(false);\n  const [bio, setBio] = useState(null);\n  const [profilePic, setProfilePic] = useState(null);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    editProfile({ bio, profilePic });\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button \n        component=\"button\"\n        onClick={handleClickOpen}\n        style={{ padding: '15px', margin: 'auto 0', borderRadius: '50%' }}\n        variant=\"contained\">\n        <EditIcon />\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit Profile:</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Edit the Bio:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Describe yourself\"\n            type=\"text\"\n            onChange={(e) => setBio(e.target.value)}\n            fullWidth\n          />\n          <DialogContentText>\n            Profile Picture:\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Paste a link of nice picture\"\n            type=\"text\"\n            onChange={(e) => setProfilePic(e.target.value)}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport NavBar from \"./NavBar\";\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { apiCall } from '../services/api';\nimport MessageCard from '../components/messageCard';\nimport DialogBox from '../components/dialogBox';\nimport FormDialog from '../components/profileEdit';\nimport '../styling/main.css';\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            load: false,\n            navbar: null,\n            follow: null\n        }\n    }\n    componentDidMount() {\n        let { id } = this.props.match.params;\n        const { user } = this.props;\n        \n        apiCall('get', `/api/users/${id}`)\n            .then(data => {\n                console.log(data);\n                if(id === user.id) {\n                    this.setState({user: data, load:true, navbar: \"User\"});\n                } else {\n                    if(data.followers.some(value => value._id === user.id)) {\n                        this.setState({user: data, load:true, follow: \"following\"});\n                    } else {\n                        this.setState({user: data, load:true, follow: \"follow\"});\n                    }\n                    \n                }\n            })\n            .catch(err => console.log(err));\n    }\n    handleFollow() {\n        const { follow, user } = this.state;\n        let http = '';\n        if(follow === \"follow\") {\n            http = \"post\"\n        } else {\n            http = \"delete\"\n        }\n        apiCall(http, `/api/users/${this.props.user.id}/follow/${user._id}`)\n                .then(data => {\n                    if(data.tweet === \"followed\") {\n                        this.setState({follow: \"following\"});\n                    } else {\n                        this.setState({follow: \"follow\"});\n                    }\n                    console.log(data.tweet)\n                })\n                .catch(err => console.log(err))\n    }\n    \n    editProfile({ bio, profilePic }) {\n        let data = {};\n        if(profilePic !== null) {\n            data = {\n                ...data,\n                profileImgUrl: profilePic\n            } \n        }\n        if(bio !== null) {\n            data = {\n                ...data,\n                bio\n            }\n        }\n        apiCall('put', `/api/users/${this.props.user.id}`, data)\n                .then(data => console.log(data))\n                .catch(err => console.log(err))\n    }\n    \n    render() {\n        let user = <CircularProgress />;\n        if(this.state.load === true) {\n            const { _id, username, profileImgUrl, bio, followers, following, messages } = this.state.user;\n            const tweets = messages.map((item, index) => {\n                return <MessageCard key={index} userInfo={this.props.user} post={{...item, user: { _id, username, profileImgUrl }}} />\n            });\n            user = <div>\n                <div className=\"profile-row\">\n                    <img \n                    className=\"profile-img\" \n                    src={profileImgUrl ? \n                    profileImgUrl : \n                    \"https://www.knack.com/images/about/default-profile.png\"} \n                    alt=\"profile-img\"\n                    />\n                    <div className=\"profile-info\">\n                        <h1 className=\"username\">{username}</h1>\n                        <p style={{color: 'white', maxWidth: '500px'}}>{bio}</p>\n                        <DialogBox user={{followers, following}} />\n                    </div>\n                {\n                    this.state.navbar ? \n                    <FormDialog editProfile={(e) => this.editProfile(e)} /> :\n                    <Button \n                      component=\"button\"\n                      style={{ margin: 'auto 0' }}\n                      variant=\"contained\"\n                      onClick={() => this.handleFollow()}>\n                        {this.state.follow}\n                    </Button>\n                }\n                </div>\n                {tweets}\n            </div>\n        }\n        return (\n            <React.Fragment>\n                <div className=\"home-page\">\n                {user}\n                </div>\n                <NavBar value={this.state.navbar} />\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.currentUser.user\n});\n\nexport default withRouter(connect(mapStateToProps, null)(User));\n","import React, { Component } from 'react';\nimport NavBar from './NavBar';\n\nclass Notifications extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar value=\"Notifications\" />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Notifications;","import { SET_CURRENT_USER } from '../actionTypes';\nimport { apiCall } from '../../services/api';\nimport { setTokenHeader } from '../../services/api';\n\nexport const setAuthorizationToken = (token) => {\n    setTokenHeader(token);\n}\n\nexport const logout = () => dispatch => {\n    localStorage.clear();\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n}\n\nexport const postNewTweet = (id, data) => {\n    return new Promise((resolve, reject) => {\n        apiCall('post', `/api/users/${id}/messages`, data)\n            .then(data => resolve(data))\n            .catch(err => reject(err.message))\n    })\n}\n\nexport const setCurrentUser = (type, userData) => dispatch => {\n    return new Promise((resolve, reject) => {\n        apiCall('post', `/api/auth/${type}`, userData)\n        .then(({token, ...user}) => {\n            localStorage.setItem('jwtToken', token);\n            setAuthorizationToken(localStorage.jwtToken);\n            dispatch({\n                type: SET_CURRENT_USER,\n                payload: {\n                    user\n                }\n            });\n            resolve(user);\n        })\n        .catch(err => reject(err))\n    });\n}\n","import React from 'react';\nimport '../styling/main.css';\nimport {FormControl, InputLabel, Input, FormHelperText} from '@material-ui/core/';\n\nfunction Username({handleChange, input}) {\n    return <FormControl fullWidth={true}>\n                <InputLabel htmlFor=\"my-input\">User Name:</InputLabel>\n                <Input required={true} type=\"text\" id=\"my-input\" aria-describedby=\"my-helper-text\" name=\"username\" value={input}  onChange={(e) => handleChange(e)} />\n                <FormHelperText id=\"my-helper-text\">Enter the user name.</FormHelperText>\n            </FormControl>\n}\n\nfunction Email({handleChange, input}) {\n    return <FormControl fullWidth={true}>\n                <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n                <Input required={true} type=\"text\" id=\"my-input\" aria-describedby=\"my-helper-text\" name=\"email\" value={input} onChange={(e) => handleChange(e)} />\n                <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n            </FormControl>\n}\n\nfunction Password({handleChange}) {\n    return <FormControl fullWidth={true}>\n                <InputLabel htmlFor=\"my-input\">Password</InputLabel>\n                <Input required={true} type=\"password\" id=\"my-input\" aria-describedby=\"my-helper-text\" name=\"password\" onChange={(e) => handleChange(e)} />\n                <FormHelperText id=\"my-helper-text\">Your passwords are always safe.</FormHelperText>\n            </FormControl>\n} \n\nfunction ProfileImgUrl({handleChange, input}) {\n    return <FormControl fullWidth={true}>\n                <InputLabel htmlFor=\"my-input\">Profile picture link:</InputLabel>\n                <Input id=\"my-input\" aria-describedby=\"my-helper-text\" value={input} name=\"profileImgUrl\" onChange={(e) => handleChange(e)} />\n                <FormHelperText id=\"my-helper-text\">Enter the URL of the profile picture.</FormHelperText>\n            </FormControl>\n}\n\nexport { Username, Email, Password, ProfileImgUrl };","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setCurrentUser } from '../store/actions/actionCreators';\nimport { Username, Email, Password, ProfileImgUrl } from '../components/form';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\n\nclass AuthForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: false,\n            errorDisc: '',\n            auth: '',\n            username: '',\n            email: '',\n            password: '',\n            profileImgUrl: ''\n        }\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value, auth: this.props.auth});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let { auth, username, email, password, profileImgUrl } = this.state;\n        if(auth === 'signup') {\n            this.props.setCurrentUser(auth, {username, email, password, profileImgUrl})\n                .then(() => {\n                    this.props.history.push('/home');\n                })\n                .catch((err) => this.setState({error: true, errorDisc: err.message}))\n        } else {\n            this.props.setCurrentUser(auth, {email, password})\n                .then(() => {\n                    this.props.history.push('/home');\n                })\n                .catch((err) => this.setState({error: true, errorDisc: err.message}))\n        }\n    }\n\n    render() {\n        let { username, email, profileImgUrl } = this.state;\n        let { auth } = this.props;\n        let form = (auth === \"signup\") ?\n            <div className=\"form\">\n                <h2 className=\"auth-text\">Join TweetBook today!</h2>\n                <form onSubmit={(e) => this.handleSubmit(e)}>\n                    <Username input={username} handleChange={(e) => this.handleChange(e)} /><br />\n                    <Email input={email} handleChange={(e) => this.handleChange(e)} /><br />\n                    <ProfileImgUrl input={profileImgUrl} handleChange={(e) => this.handleChange(e)} /><br />\n                    <Password handleChange={(e) => this.handleChange(e)} /><br />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Signup\n                    </Button><br />\n                {this.state.error ? <Alert severity=\"error\">{this.state.errorDisc}</Alert>:null}\n                </form>\n            </div>\n            : <div className=\"form\">\n                <h2 className=\"auth-text\">Login to TweetBook Now!</h2>\n                <form onSubmit={(e) => this.handleSubmit(e)}>\n                    <Email input={email} handleChange={(e) => this.handleChange(e)} /><br />\n                    <Password handleChange={(e) => this.handleChange(e)} /><br />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Login\n                    </Button><br />\n                {this.state.error ? <Alert severity=\"error\">{this.state.errorDisc}</Alert>:null}\n                </form>\n        </div>\n        return (\n            <React.Fragment>\n                {form}\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStataToProps(state) {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default withRouter(connect(mapStataToProps, {setCurrentUser})(AuthForm));","import React, { Component } from 'react';\nimport { Button, TextField, FormControl } from '@material-ui/core/';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Alert from '@material-ui/lab/Alert';\nimport { postNewTweet } from '../store/actions/actionCreators';\nimport '../styling/main.css';\n\nclass NewTweet extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            text: '',\n            error: false,\n            errorDisc: ''\n        }\n    }\n    handleChange(e) {\n        this.setState({text: e.target.value});\n    }\n    handlePost(e) {\n        e.preventDefault();\n        postNewTweet(this.props.currentUserId, {text: this.state.text})\n            .then(data => {\n                console.log(data);\n                this.props.history.push('/home');\n            })\n            .catch(err => {\n                console.log(err);\n                this.setState({error: true, errorDisc: err.message});\n            })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <FormControl component=\"form\" onSubmit={(e) => this.handlePost(e)} fullWidth={true}>\n                    <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"New Tweet\"\n                    multiline\n                    rows={4}\n                    required\n                    variant=\"outlined\"\n                    value={this.state.text}\n                    onChange={(e) => this.handleChange(e)}\n                    /><br/>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                        Post\n                    </Button>\n                </FormControl><br />\n                {this.state.error ? <Alert severity=\"error\">{this.state.errorDisc}</Alert>:null}\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    currentUserId: state.currentUser.user.id\n});\n\nexport default withRouter(connect(mapStateToProps, null)(NewTweet));","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Welcome from '../components/welcome';\nimport Home from './home';\nimport User from './user';\nimport Notifications from './notifications';\nimport AuthForm from './AuthForm';\nimport NewTweet from '../components/newTweet';\nimport '../styling/main.css';\n\nfunction ShowCase({ user }) {\n    return (\n        <div className=\"App\">\n            <Route exact path=\"/\">\n                <Welcome />\n            </Route>\n            <Route path=\"/signup\">\n                <AuthForm auth=\"signup\" />\n            </Route>\n            <Route path=\"/signin\">\n                <AuthForm auth=\"signin\" />\n            </Route>\n            <Route path=\"/home\">\n                <Home />\n            </Route>\n            <Route path=\"/notifications\">\n                <Notifications />\n            </Route>    \n            <Route path=\"/user/:id\">\n                <User />\n            </Route>\n            <Route path=\"/newTweet\">\n                <NewTweet />\n            </Route>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    user: state.currentUser.user\n});\n\nexport default connect(mapStateToProps, null)(ShowCase);\n","import React from 'react';\nimport { configureStore } from '../store';\nimport { Provider } from 'react-redux';\nimport { SET_CURRENT_USER } from '../store/actionTypes';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ShowCase from './ShowCase';\nimport { setAuthorizationToken, setCurrentUser } from '../store/actions/actionCreators';\nimport jwtDecode from 'jwt-decode';\n\nconst store = configureStore();\n\nif(localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  try {\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: {\n          user: jwtDecode(localStorage.jwtToken)\n      }\n   });\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <ShowCase />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nexport function configureStore() { \n    const store = createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(thunk)\n            // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )\n    );\n    return store;\n }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}